{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\n\n// Create axios instance\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Request interceptor to add auth token\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Response interceptor to handle auth errors\napi.interceptors.response.use(response => response, error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\n\n// Auth API\nexport const authAPI = {\n  login: credentials => api.post('/auth/login', credentials),\n  register: data => api.post('/auth/register', data),\n  verify: () => api.get('/auth/verify')\n};\n\n// User API\nexport const userAPI = {\n  getProfile: () => api.get('/users/profile'),\n  updateProfile: data => api.put('/users/profile', data),\n  getStudents: classId => api.get('/users/students', {\n    params: {\n      classId\n    }\n  })\n};\n\n// Attendance API\nexport const attendanceAPI = {\n  markAttendance: (studentId, status) => api.post('/attendance/mark', {\n    studentId,\n    status\n  }),\n  checkIn: () => api.post('/attendance/checkin'),\n  getByDate: (date, classId) => api.get(`/attendance/date/${date}`, {\n    params: {\n      classId\n    }\n  }),\n  getStudentAttendance: (studentId, startDate, endDate) => api.get(`/attendance/student/${studentId}`, {\n    params: {\n      startDate,\n      endDate\n    }\n  }),\n  getMyAttendance: (startDate, endDate) => api.get('/attendance/my', {\n    params: {\n      startDate,\n      endDate\n    }\n  }),\n  getDashboardStats: () => api.get('/attendance/dashboard/stats'),\n  getStats: (classId, startDate, endDate) => api.get('/attendance/stats', {\n    params: {\n      classId,\n      startDate,\n      endDate\n    }\n  })\n};\n\n// QR API\nexport const qrAPI = {\n  generateQR: studentId => api.get(`/qr/generate/${studentId}`),\n  scanQR: qrData => api.post('/qr/scan', {\n    qrData\n  }),\n  getMyQR: () => api.get('/qr/my-qr')\n};\n\n// Reports API\nexport const reportsAPI = {\n  getAttendanceReport: (startDate, endDate, classId, format) => api.get('/reports/attendance', {\n    params: {\n      startDate,\n      endDate,\n      classId,\n      format\n    }\n  }),\n  getClassSummary: date => api.get('/reports/class-summary', {\n    params: {\n      date\n    }\n  }),\n  getLowAttendance: (threshold, days) => api.get('/reports/low-attendance', {\n    params: {\n      threshold,\n      days\n    }\n  })\n};\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","_error$response","status","removeItem","window","location","href","authAPI","login","credentials","post","register","data","verify","get","userAPI","getProfile","updateProfile","put","getStudents","classId","params","attendanceAPI","markAttendance","studentId","checkIn","getByDate","date","getStudentAttendance","startDate","endDate","getMyAttendance","getDashboardStats","getStats","qrAPI","generateQR","scanQR","qrData","getMyQR","reportsAPI","getAttendanceReport","format","getClassSummary","getLowAttendance","threshold","days"],"sources":["/Users/vaibhavkumar/Documents/attendance_system_new/frontend/src/utils/api.ts"],"sourcesContent":["import axios from 'axios';\nimport { LoginCredentials, RegisterData } from '../types';\n\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\n\n// Create axios instance\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Request interceptor to add auth token\napi.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// Response interceptor to handle auth errors\napi.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    if (error.response?.status === 401) {\n      localStorage.removeItem('token');\n      localStorage.removeItem('user');\n      window.location.href = '/login';\n    }\n    return Promise.reject(error);\n  }\n);\n\n// Auth API\nexport const authAPI = {\n  login: (credentials: LoginCredentials) => \n    api.post('/auth/login', credentials),\n  \n  register: (data: RegisterData) => \n    api.post('/auth/register', data),\n  \n  verify: () => \n    api.get('/auth/verify'),\n};\n\n// User API\nexport const userAPI = {\n  getProfile: () => \n    api.get('/users/profile'),\n  \n  updateProfile: (data: any) => \n    api.put('/users/profile', data),\n  \n  getStudents: (classId?: number) => \n    api.get('/users/students', { params: { classId } }),\n};\n\n// Attendance API\nexport const attendanceAPI = {\n  markAttendance: (studentId: string, status: string) => \n    api.post('/attendance/mark', { studentId, status }),\n  \n  checkIn: () => \n    api.post('/attendance/checkin'),\n  \n  getByDate: (date: string, classId?: number) => \n    api.get(`/attendance/date/${date}`, { params: { classId } }),\n  \n  getStudentAttendance: (studentId: string, startDate?: string, endDate?: string) => \n    api.get(`/attendance/student/${studentId}`, { params: { startDate, endDate } }),\n  \n  getMyAttendance: (startDate?: string, endDate?: string) => \n    api.get('/attendance/my', { params: { startDate, endDate } }),\n  \n  getDashboardStats: () => \n    api.get('/attendance/dashboard/stats'),\n  \n  getStats: (classId?: number, startDate?: string, endDate?: string) => \n    api.get('/attendance/stats', { params: { classId, startDate, endDate } }),\n};\n\n// QR API\nexport const qrAPI = {\n  generateQR: (studentId: string) => \n    api.get(`/qr/generate/${studentId}`),\n  \n  scanQR: (qrData: string) => \n    api.post('/qr/scan', { qrData }),\n  \n  getMyQR: () => \n    api.get('/qr/my-qr'),\n};\n\n// Reports API\nexport const reportsAPI = {\n  getAttendanceReport: (startDate: string, endDate: string, classId?: number, format?: string) => \n    api.get('/reports/attendance', { params: { startDate, endDate, classId, format } }),\n  \n  getClassSummary: (date?: string) => \n    api.get('/reports/class-summary', { params: { date } }),\n  \n  getLowAttendance: (threshold?: number, days?: number) => \n    api.get('/reports/low-attendance', { params: { threshold, days } }),\n};\n\nexport default api;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}