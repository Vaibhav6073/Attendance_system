version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: attendance_db
    environment:
      POSTGRES_DB: attendance_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/schema.sql:/docker-entrypoint-initdb.d/01-schema.sql
    networks:
      - attendance_network
    restart: unless-stopped

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: attendance_backend
    environment:
      NODE_ENV: development
      PORT: 5000
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: attendance_db
      DB_USER: postgres
      DB_PASSWORD: password123
      JWT_SECRET: your_super_secret_jwt_key_here_make_it_long_and_random
      FRONTEND_URL: http://localhost:3000
    ports:
      - "5000:5000"
    depends_on:
      - postgres
    volumes:
      - ./backend:/app
      - /app/node_modules
    networks:
      - attendance_network
    restart: unless-stopped
    command: npm run dev

  # Frontend React App
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: attendance_frontend
    environment:
      REACT_APP_API_URL: http://localhost:5000/api
    ports:
      - "3000:3000"
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - attendance_network
    restart: unless-stopped
    command: npm start

  # Redis (for caching and sessions - optional)
  redis:
    image: redis:7-alpine
    container_name: attendance_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - attendance_network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:

networks:
  attendance_network:
    driver: bridge